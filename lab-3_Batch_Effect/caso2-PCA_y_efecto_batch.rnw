\SweaveOpts{prefix.string=figures/fig, keep.source=true, eps=FALSE, pdf=TRUE}
%\setkeys{Gin}{width=.66\textwidth}

%
% prefix.string=figures/fig indica que les imatges es guardin a la carpeta "figures",
% i que el nom dels arxius comencin amb el  amb el prefix "fig".
% Els noms son optatius pero el directori ha d'existir
%
% \setkeys{Gin}{width=.66\textwidth} indica l'amplada per defecte dels grafics
%
% keep.source serveix per a que el text es presenti tal com s'escrigui en el document.
%
% eps=FALSE, pdf=TRUE, indiquen quina mena de gràfics cal generar
%
%

<<basicOptions, echo=F, results=H>>=
options(width=80, warn=0, digits=4)
@

\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[spanish]{babel}
\usepackage{amsmath}
\usepackage{amssymb,amsfonts,textcomp}
\usepackage{array}
\usepackage{hhline}
\usepackage{url}
\usepackage[pdftex]{graphicx}
\usepackage{underscore}

\usepackage{Sweave}

\newcommand{\R}{\textbf{R}\,}
\newcommand{\RFI}{\textbf{R}}

\newcommand{\Rcode}[1]{{\texttt{#1}}}
\newcommand{\Robj}[1]{{\texttt{#1}}}
\newcommand{\Rpac}[1]{{\textit{#1}}}   
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\bit}{\begin{itemize}}
\newcommand{\eit}{\end{itemize}}
\newcommand{\ben}{\begin{enumerate}}
\newcommand{\een}{\end{enumerate}}


\title{Caso resuelto 2: Detecci\'on de efecto \emph{batch} en datos de alto rendimiento}
\author{Alex S\'anchez y Francesc Carmona}
\date{}

\begin{document}

\maketitle


\tableofcontents

\section{Introducción}

Muchos datos de alto rendimiento como los microarrays o los de prote\'omica presentan un tipo particular de complicaci\'on t\'ecnica que se conoce como efecto \emph{batch}. Dicho efecto consiste en que muestras producidas en el mismo ``lote'' (mismo día, misma tanda de hibridación, mismo operario, ...) se parecen más entre ellas que muestras producidas en lotes distintos pudiendo llegar a causar confusi\'on en estudios comparativos en los que el efecto batch enmascare el efecto de los tratamientos en estudio.

Si la presencia del efecto batch se conoce o espera \emph{a priori} puede, en principio, ser controlado o cancelado mediante un adecuado diseño experimental, en el que el lote se tratará usualmente como un bloque. En este caso un adecuado balanceo entre bloques y tratamientos puede cancelar el efecto batch. Alternativamente, dicho efecto puede incluirse como un  factor en el modelo de análisis de la varianza, lo que eliminara del análisis la variación atribuible al lote.

En muchas (demasiadas) ocasiones el efecto batch no ha sido considerado de antemano, o incluso, cuando sí lo ha sido, puede que no se hayan tenido en cuenta todos los posible efectos (a lo mejor se ha tenido en cuenta el día pero no que los reactivos utilizados provenían de dos lotes o que las piezas se han procesado en grupos, o ...). 

En prevención de los problemas que esto puede generar es conveniente realizar algún tipo de análisis exploratorio que permita detectar la posible presencia de estos efectos. En caso de detectarse efectos indeseados puede plantearse su eliminación mediante alguna de las técnicas disponibles para ello.

\section{Los datos para el análisis}

Los datos para este ejemplo consisten en datos de microarrays de expresión génica, tipo hgu95-a utilizados para analizar un estudio de cancer de mama en el que se analiza el efecto de distintos tratamientos y distintos tiempos de exposición a éstos, sobre la expresión de los genes. 

El estudio se halla disponible en la base de datos Gene Expression Omnibus (GEO, 
\url{http://www.ncbi.nlm.nih.gov/geo} con número de acceso  ``GSE848''. Para este ejemplo hemos utilizado un subconjunto de estos datos basado en 18 muestras, localizado en el archivo \texttt{Breast-Cancer.txt}.

Este archivo, a diferencia de lo habitual en datos de alto rendimiento, contiene las variables (genes) en columnas y las muestras en las filas. Lo primero es leer los datos y separar la información sobre grupos y lotes de las observaciones.

<<leeDatos>>=
data <-read.table(file.path("data", "Breast_Cancer.txt"), head=T, sep="\t", as.is=TRUE)
# Fora els controls
data <- data[-(1:2),]
targets <- data[,1:5]
#treure el simbol "+"
targets[targets=="E2+ICI"]<- "E2.ICI"
targets[targets=="E2+Ral"]<- "E2.Ral"
targets[targets=="E2+TOT"]<- "E2.TOT"
sampleNames <- targets$ShortName <- paste(targets$Treatment,targets$Time,targets$Batch, sep=".")
targets <-targets[,-5]
x <- t(data[,-(1:5)])
colnames(x) <-sampleNames
head(x)
save(x, targets, file=file.path("data","dades.Rda"))
@ 

La tabla \ref{targetsTable} describe los grupos y covariables de que consta el subconjunto de datos analizado:


<<texTablaNN, echo=FALSE, print=FALSE, results=tex>>= 
stopifnot(require(xtable))
x.big <- xtable(targets,
                label = 'targetsTable',
                caption = 'Tabla de grupos y covariables presentes en el estudio analizado')
print(x.big, type="latex")
@

% Si la tabla es pequeña se puede usar "tabular.environment=table"

\section{Análisis del efecto batch}

La detección de efectos batch puede hacerse de diversas formas pero esencialmente, de lo que se trata es de ver si las muestras se agrupan por causas distintas a las que se podría esperar, por ejemplo si en vez de parecerse más entre si muestras que han recibido un mismo tratamient, lo hacen las que han recibido algun tratamiento el mismo día.

La detección de estos efectos puede hacerse mediante distintas técnicas de las que, la más popular es el análisis de componentes principales. Una vez detectado si existe efecto batch es posible mirar de eliminarlo. Si cada tratamiento en estudio está presente en cada lote suele ser posible separar ambos efectos. Si, no es así no suele ser posible evitar cierto grado de \emph{confusión} tratamiento--lote.

\subsection{Detectando el efecto batch}

<<preajustes, echo=F>>=
colores <- c(rep("yellow", 4), rep("blue", 4), rep("red", 4), rep("green", 4))
@ 

Un diagrama de cajas no muestra ninguna tendencia clara que separe los lotes A y B

<<boxplot, fig=T>>=
boxplot(as.data.frame(x), cex.axis=0.6, col=colores, las=2, names=sampleNames, 
        main="Signal distribution for selected chips")
@


<<plotPC, results=H>>=
plotPCA <- function ( X, labels=NULL, colors=NULL, dataDesc="", scale=FALSE)
{
  pcX<-prcomp(t(X), scale=scale) # o prcomp(t(X))
  loads<- round(pcX$sdev^2/sum(pcX$sdev^2)*100,1)
  xlab<-c(paste("PC1",loads[1],"%"))
  ylab<-c(paste("PC2",loads[2],"%"))
  if (is.null(colors)) colors=1
  plot(pcX$x[,1:2],xlab=xlab,ylab=ylab, col=colors, 
       xlim=c(min(pcX$x[,1])-10, max(pcX$x[,1])+10))
  text(pcX$x[,1],pcX$x[,2], labels, pos=3, cex=0.8)
  title(paste("Plot of first 2 PCs for expressions in", dataDesc, sep=" "), cex=0.8)
}
@ 

<<plotPCA2D, fig=T>>=
plotPCA(x, labels=sampleNames, dataDesc="selected samples")
@

Es imediato ver que las muestras del grupo A y B se encuentran salvo excepciones agrupadas en cuadrantes distintos.

Un gráfico en tres dimensiones permite visualizar mejor esta heterogeneidad

<<plotPCA3D, fig=T>>=
if(!(require(scatterplot3d))) install.packages("scatterplot3d")
require(scatterplot3d)
label<- sampleNames
pcX<-prcomp(t(x), scale=FALSE) # o prcomp(t(X))
res3d<-scatterplot3d(pcX$x[,1:3], angle=20)
text(res3d$xyz.convert(pcX$x[,1], pcX$x[,2], pcX$x[,3]), 
     labels=sampleNames, pos=3, cex=0.6)
title(paste("Plot of first 3 PCs for expressions"), cex=0.8)
@ 

Un enfoque alternativo aunque relacionado es realizar un análisis basado en distancias. 
Podemos hacerlo calculando y visualizando la matriz de distancias mediante un mapa de colores o escalamiento multidimensional.

<<distAnalisis, fig=T>>=
manDist <- dist(t(x))
heatmap (as.matrix(manDist), col=heat.colors(16))
@ 

<<mds>>=
require(MASS)
sam1<-sammon (manDist, trace=FALSE)
plot(sam1$points)
text(sam1$points, targets$Batch, pos=4)
@ 


Todas las visualizaciones coinciden en mostrar una separación asociada al factor batch A o B.

\subsection{Cuantificación del efecto batch}

Si se construye un modelo de análisis de la varianza apropiado es posible cuantificar la importancia media del efecto batch y compararla con el efecto de los tratamientos.


<<pesDelsBlocs>>=
# Prova
x1<-x[1,]
treat <- as.factor(targets$Treatment)
time <-  as.factor(targets$Time)
batch <-  as.factor(targets$Batch)
mimod <- x1 ~treat+time+batch
aov1<-aov(mimod)
s<-summary(aov1)
Fs<- s[[1]][,3]/s[[1]][4,3]

myLM <- function(x){
  mimod <- x ~ treat+time+batch
  s<-summary(aov(mimod))
  return(s[[1]][,3]/s[[1]][4,3])
  }

Fs<- apply(x,1,myLM)
M <-apply(Fs,1,  mean, na.rm=T)
names(M) <- rownames(Fs)<- c("Treatment", "Time", "Batch", "Error")
@ 

<<varSources, fig=T>>=
barplot(M, col=c("green", "blue", "yellow", "red"), axis.lty=1,
        main="Sources of variation.\n")
@ 

Como puede verse la principal fuente de variación es el efecto lote.


\section{Eliminación del efecto batch}

Para cuantificar el efecto batch hemos ajustado un modelo lineal. Dicho modelo permite estimar de los efectos de cada factor. Una forma de eliminar el efecto batch es restar de las observaciones los efectos estimados.

Otra opción más simple es centrar los datos respecto de las medias de cada batch.

Por ejemplo un gen con importante efecto batch es:

<<maxBatch>>=
highF <- quantile(Fs["Batch",],0.9, na.rm=TRUE)
lowF <-  quantile(Fs["Batch",],0.1, na.rm=TRUE)
hFs<- which(Fs[,3] >= highF)[1]
Fs[,3]
summary(aov(x[3,] ~treat+time+batch))
@ 

Si a los valores del batch A les restamos su media y a los del B la suya obtenemos

<<removBatch1>>=
  meanA <- mean(x[3,batch=="A"])
  meanB <- mean(x[3,batch=="B"])
  xAdj <-  ifelse(batch=="A", x[3,]-meanA, x[3,]-meanB)
  mimodAdj <- xAdj ~treat+time+batch
  aovAdj<-aov(mimodAdj)
  summary(aovAdj)
@ 

Esto puede hacerse para todos los genes a la vez:

<<removeBatchAll>>=
bcX <- cbind(t(scale(t(x[,batch=="A"]), center=TRUE, scale=FALSE)),
             t(scale(t(x[,batch=="B"]), center=TRUE, scale=FALSE)))
bcX <-bcX[, colnames(x)]
# colnames(x)== colnames(bcX)
@ 

Como puede verse esta operación ha eliminado el efecto Batch de los datos
<<verificaNoBatch>>=
adjFs<- apply(bcX,1,myLM)
adjM <-apply(adjFs,1,  mean, na.rm=T)
names(adjM) <- rownames(adjFs)<- c("Treatment", "Time", "Batch", "Error")
@ 

<<varSourcesAdjusted, fig=T>>=
barplot(adjM, col=c("green", "blue", "yellow", "red"), axis.lty=1,
        main="Sources of variation.\nBatch-adjusted data")
@

El análisis de componentes principales también muestra la desaparición del efecto batch:

<<plotPCA2DAdjusted, fig=T>>=
label<- sampleNames
plotPCA(bcX, labels=label, dataDesc="Batch-adjusted data")
@


\end{document}
