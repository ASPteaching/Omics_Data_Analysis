q()
q()
study <- read.csv("Desktop/viagra.csv")
head(study)
boxplot(Participant_libido ~ Treatment, data = study)
boxplot(Partner_libido ~ Treatment, data = study)
mean(study$Participant_libido[study$Treatment=='Placebo'])
mean(study[study$Treatment=='Placebo',2])
mean(study[study$Treatment=='HighDose',2])
mean(study[study$Treatment=='LowDose',2])
study[study$Treatment=='LowDose',2]
study[study$Treatment=='HighDose',2]
aggregate(study[,2:3],list(study$Treatment),mean)
aggregate(study,list(study$Treatment),mean)
[,2:3]
aggregate(study[,2:3],list(study$Treatment),mean)
aggregate(study[,2:3],list(study$Treatment),mean)
study$Treatment <- as.factor(study$Treatment)
anova_out <- aov(Participant_libido ~ Treatment,data = study )
summary(anova_out)
lm(Participant_libido ~ Partner_libido, study)
reggression<-lm(Participant_libido ~ Partner_libido, study)
anova(reggression)
reggression_placebo<-lm(Participant_libido ~ Partner_libido, study[study$Treatment=='Placebo',])
anova(reggression_placebo)
reggression_high<-lm(Participant_libido ~ Partner_libido, study[study$Treatment=='HighDose',])
anova(reggression_high)
reggression_low<-lm(Participant_libido ~ Partner_libido, study[study$Treatment=='LowDose',])
anova(reggression_low)
anova(reggression_high)
ancova_out <- aov(Participant_libido ~ Treatment + Partner_libido,data = study )
ancova_out
summary(ancova_out)
summary(anova_out)
library(devtools)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(Biobase)
library(Biobase)
setwd("~/Documents/Omics_techniques-master/lab-1_MicroarraysDataAnalysis")
workingDir <-getwd() # Remember to first do Session/Set working directory
dataDir <- file.path(workingDir, "/datasets")
resultsDir <- file.path(workingDir, "/results")
setwd(resultsDir)
setwd(resultsDir)
installifnot <- function (pkg){
if (!require(pkg, character.only=T)){
source("http://bioconductor.org/biocLite.R")
biocLite(pkg)
}else{
require(pkg, character.only=T)
}
}
installifnot("pd.mogene.1.0.st.v1")
installifnot("mogene10sttranscriptcluster.db")
installifnot("oligo")
installifnot("limma")
installifnot("Biobase")
installifnot("arrayQualityMetrics")
targets <-read.csv(file=file.path(dataDir,"targets.csv"), header = TRUE, sep=";")
targets
CELfiles<-list.celfiles(file.path(dataDir))
CELfiles
rawData<-read.celfiles(file.path(dataDir,CELfiles))
rawData
sampleNames <- as.character(targets$ShortName)
sampleColor<- as.character(targets$Colors)
boxplot(rawData, which="all",las=2, main="Intensity distribution of RAW data",
cex.axis=0.6, col=sampleColor, names=sampleNames)
clust.euclid.average <- hclust(dist(t(exprs(rawData))),method="average")
plot(clust.euclid.average, labels=sampleNames, main="Hierarchical clustering of RawData",
cex=0.7,  hang=-1)
plotPCA <- function ( X, labels=NULL, colors=NULL, dataDesc="", scale=FALSE, formapunts=NULL, myCex=0.8,...)
{
pcX<-prcomp(t(X), scale=scale) # o prcomp(t(X))
loads<- round(pcX$sdev^2/sum(pcX$sdev^2)*100,1)
xlab<-c(paste("PC1",loads[1],"%"))
ylab<-c(paste("PC2",loads[2],"%"))
if (is.null(colors)) colors=1
plot(pcX$x[,1:2],xlab=xlab,ylab=ylab, col=colors, pch=formapunts,
xlim=c(min(pcX$x[,1])-100000, max(pcX$x[,1])+100000),ylim=c(min(pcX$x[,2])-100000, max(pcX$x[,2])+100000))
text(pcX$x[,1],pcX$x[,2], labels, pos=3, cex=myCex)
title(paste("Plot of first 2 PCs for expressions in", dataDesc, sep=" "), cex=0.8)
}
plotPCA(exprs(rawData), labels=sampleNames, dataDesc="raw data", colors=sampleColor,
formapunts=c(rep(16,4),rep(17,4)), myCex=0.6)
require(oligo)
eset<-rma(rawData)
boxplot(eset, las=2, main="Intensity distribution of Normalized data", cex.axis=0.6,
col=sampleColor, names=sampleNames)
clust.euclid.average <- hclust(dist(t(exprs(eset))),method="average")
plot(clust.euclid.average, labels=sampleNames, main="Hierarchical clustering of NormData",
cex=0.7,  hang=-1)
plotPCA <- function ( X, labels=NULL, colors=NULL, dataDesc="", scale=FALSE, formapunts=NULL, myCex=0.8,...)
{
pcX<-prcomp(t(X), scale=scale) # o prcomp(t(X))
loads<- round(pcX$sdev^2/sum(pcX$sdev^2)*100,1)
xlab<-c(paste("PC1",loads[1],"%"))
ylab<-c(paste("PC2",loads[2],"%"))
if (is.null(colors)) colors=1
plot(pcX$x[,1:2],xlab=xlab,ylab=ylab, col=colors, pch=formapunts,
xlim=c(min(pcX$x[,1])-10, max(pcX$x[,1])+10),ylim=c(min(pcX$x[,2])-10, max(pcX$x[,2])+10))
text(pcX$x[,1],pcX$x[,2], labels, pos=3, cex=myCex)
title(paste("Plot of first 2 PCs for expressions in", dataDesc, sep=" "), cex=0.8)
}
plotPCA(exprs(eset), labels=sampleNames, dataDesc="NormData", colors=sampleColor,
formapunts=c(rep(16,4),rep(17,4)), myCex=0.6)
annotation(eset) <- "org.Mm.eg.db"
eset_filtered <- nsFilter(eset, var.func=IQR,
var.cutoff=0.75, var.filter=TRUE,
filterByQuantile=TRUE)
library(genefilter)
annotation(eset) <- "org.Mm.eg.db"
eset_filtered <- nsFilter(eset, var.func=IQR,
var.cutoff=0.75, var.filter=TRUE,
filterByQuantile=TRUE)
print(eset_filtered$filter.log$numLowVar)
print(eset_filtered$eset)
print(eset)
treat<- targets$grupos
lev<-factor(treat, levels=unique(treat))
design <-model.matrix(~0+lev)
colnames(design)<-levels(lev)
rownames(design) <-sampleNames
print(design)
cont.matrix1 <- makeContrasts(
Induced.vs.WT=Induced-WT,
levels=design)
library(limma)
treat<- targets$grupos
lev<-factor(treat, levels=unique(treat))
design <-model.matrix(~0+lev)
colnames(design)<-levels(lev)
rownames(design) <-sampleNames
print(design)
cont.matrix1 <- makeContrasts(
Induced.vs.WT=Induced-WT,
levels=design)
comparison1 <- "Effect of Induction"
fit1<-lmFit(eset_filtered$eset, design)
fit.main1<-contrasts.fit(fit1, cont.matrix1)
fit.main1<-eBayes(fit.main1)
topTab <-  topTable (fit.main1, number=nrow(fit.main1), coef="Induced.vs.WT", adjust="fdr",lfc=abs(3))
write.csv2(topTab, file=paste("Selected.Genes.in.comparison.",comparison1,".csv", sep=""))
print(xtable(topTab,align="lllllll"),type="html",html.table.attributes="",
file=paste("Selected.Genes.in.comparison.",comparison1,".html", sep=""))
volcanoplot(fit.main1, highlight=10, names=fit.main1$ID,
main=paste("Differentially expressed genes",colnames(cont.matrix1), sep="\n"))
abline(v=c(-1,1))
pdf("Volcanos.pdf")
volcanoplot(fit.main1, highlight=10, names=fit.main1$ID,
main=paste("Differentially expressed genes",colnames(cont.matrix1), sep="\n"))
abline(v=c(-1,1))
dev.off()
my_frame<-data.frame(exprs(eset))
head(my_frame)
HMdata<-merge(my_frame,topTab, by.x=0,by.y=0)
rownames(HMdata)<-HMdata$Row.names
HMdata<-HMdata[,-c(1,10:15)]
head(HMdata)
HMdata2<-data.matrix(HMdata,rownames.force=TRUE)
head(HMdata2)
write.csv2(HMdata2, file="Data2HM.csv")
my_palette <- colorRampPalette(c("blue", "red"))(n = 299) # creates a own color palette from red to green
heatmap.2(HMdata2,
Rowv=TRUE,
Colv=TRUE,
main="HeatMap Induced.vs.WT FC>=3",
scale="row",
col=my_palette,
sepcolor="white",
sepwidth=c(0.05,0.05),
cexRow=0.5,
cexCol=0.9,
key=TRUE,
keysize=1.5,
density.info="histogram",
ColSideColors=c(rep("red",4),rep("blue",4)),
tracecol=NULL,
srtCol=30)
require(ggplot)
require(gplot)
installifnot("gplots")
library (gplots)
my_palette <- colorRampPalette(c("blue", "red"))(n = 299) # creates a own color palette from red to green
heatmap.2(HMdata2,
Rowv=TRUE,
Colv=TRUE,
main="HeatMap Induced.vs.WT FC>=3",
scale="row",
col=my_palette,
sepcolor="white",
sepwidth=c(0.05,0.05),
cexRow=0.5,
cexCol=0.9,
key=TRUE,
keysize=1.5,
density.info="histogram",
ColSideColors=c(rep("red",4),rep("blue",4)),
tracecol=NULL,
srtCol=30)
pdf("HeatMap InducedvsWT.pdf")
heatmap.2(HMdata2,
Rowv=TRUE,
Colv=TRUE,
main="HeatMap Induced.vs.WT FC>=3",
scale="row",
col=my_palette,
sepcolor="white",
sepwidth=c(0.05,0.05),
cexRow=0.5,
cexCol=0.9,
key=TRUE,
keysize=1.5,
density.info="histogram",
ColSideColors=c(rep("red",4),rep("blue",4)),
tracecol=NULL,
srtCol=30)
dev.off()
all_anota<-data.frame(exprs(eset))
Annot <- data.frame(SYMBOL=sapply(contents(mogene10sttranscriptclusterSYMBOL), paste, collapse=", "),
DESC=sapply(contents(mogene10sttranscriptclusterGENENAME), paste, collapse=", "))
Annot<-Annot[!Annot$SYMBOL=="NA",]
Annot<-Annot[!Annot$DESC=="NA",]
all_anota<-data.frame(exprs(eset))
Annot <- data.frame(SYMBOL=sapply(contents(mogene10sttranscriptclusterSYMBOL), paste, collapse=", "),
DESC=sapply(contents(mogene10sttranscriptclusterGENENAME), paste, collapse=", "))
library(mogene10sttranscriptclusterSYMBOL.db)
library(mogene10sttranscriptcluster.db)
all_anota<-data.frame(exprs(eset))
Annot <- data.frame(SYMBOL=sapply(contents(mogene10sttranscriptclusterSYMBOL), paste, collapse=", "),
DESC=sapply(contents(mogene10sttranscriptclusterGENENAME), paste, collapse=", "))
Annot<-Annot[!Annot$SYMBOL=="NA",]
Annot<-Annot[!Annot$DESC=="NA",]
head(Annot)
anotaGenes <- merge(Annot,all_anota, by.x=0,by.y=0)
head(anotaGenes)
write.table(anotaGenes,file="data.ann.txt",sep="\t")
rownames(anotaGenes)<-anotaGenes[,1]
anotaGenes<-anotaGenes[,-1]
anotaGenes.end <- merge(anotaGenes,topTab, by.x=0,by.y=0)
topTab.end<-anotaGenes.end[,c(1:3,12:17,4:11)]
topTab.end<- topTab.end[order(-topTab.end$B),]
rownames(topTab.end)<-topTab.end[,1]
write.csv(topTab.end,file="TopTable.end.csv")
setwd("~/Documents/Omics_techniques-master/lab-1_MicroarraysDataAnalysis/results")
setwd("~/Documents/Omics_techniques-master/lab-1_MicroarraysDataAnalysis")
setwd("~/Documents/Omics_techniques-master")
